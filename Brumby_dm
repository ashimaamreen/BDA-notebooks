--create table campaign_data.aa_dmc2556_brumbyprerenewal3_counts_20211006 as 
with rsa as (
SELECT DISTINCT asset.owner_accnt_id
        , asset.row_id
        , prod.name
        , nrp.name as next_renewable_prod
        , v.lcns_num 

FROM
    gms.s_asset AS asset
    
inner join gms.s_Asset v 
on v.row_id=asset.service_point_id
    
INNER JOIN
    gms.s_prod_int AS prod
    ON prod.row_id = asset.prod_id

LEFT OUTER JOIN
    gms.s_prod_int AS nrp
    ON nrp.row_id = asset.x_next_renewal_prod_id

INNER JOIN
    gms.s_contact AS con
    ON con.row_id = asset.owner_con_id


WHERE 
    asset.status_cd = "Active"
    AND prod.prod_cd != "Promotion"
    AND prod.sub_type_cd='RSA'
    AND asset.x_next_renewal_prod_id IS NOT NULL
    AND DATE_ADD(from_utc_timestamp(asset.end_dt,'AEST'), 1) BETWEEN '2022-01-01' AND '2022-03-31'
    and con_cd in ('Ordinary Member' , 'Affiliate Member')
    and nrp.name not in ('TC','F2G','BC','NB')

), addon as (
SELECT DISTINCT asset.owner_accnt_id
        , asset.par_asset_id
        , prod.name as addon

FROM
    gms.s_asset AS asset
    
INNER JOIN
    gms.s_prod_int AS prod
    ON prod.row_id = asset.prod_id

LEFT OUTER JOIN
    gms.s_prod_int AS nrp
    ON nrp.row_id = asset.x_next_renewal_prod_id


WHERE 
    asset.status_cd = "Active"
    AND prod.prod_cd != "Promotion"
    AND prod.sub_type_cd='Add-on'
    AND DATE_ADD(from_utc_timestamp(asset.end_dt,'AEST'), 1) BETWEEN '2022-01-01' AND '2022-03-31'

), main as (
    select distinct m.owner_accnt_id  as account_id
            , m.row_id as asset_id
            , m.lcns_num as rego
            , name as prod
            , a.addon
            , m.next_renewable_prod
            , case    
                when (m.name rlike 'Plus' and m.next_renewable_prod in ('PP','CO')) and addon='Pet Plus' then '1'
                when (m.name rlike 'Plus' and m.next_renewable_prod in ('PP','CO')) and addon='Windscreen Plus' then '2'
                when (m.name rlike 'Plus' and m.next_renewable_prod in ('PP','CO')) then '3'
                when m.next_renewable_prod in ('PC','CO') and addon='Pet Plus' then '4'
                when m.next_renewable_prod in ('PC','CO') and addon='Windscreen Plus' then '5'
                when m.next_renewable_prod in ('PC','CO') then '6'
                when m.next_renewable_prod in ('EV','EY','CC') then '7'
                else '99' end Priority 
    
    from rsa m

    left join addon a
    on a.par_asset_id=m.row_id
    
   ) 
  , main2 as (
  select  account_id
        , Priority
        , rego
        , rank() over(partition by account_id order by Priority asc) as rnk
  from main
  where Priority!='99'
  ), final as (
  select account_id
            , max(Priority) as letter_version 
            ,max(rego) as vehicle_rego 
  from main2
  where rnk=1
  group by 1
  )
  SELECT distinct c.csn as membernumber
        , c.cust_value_cd as memberType
        , vehicle_rego
        , c.x_nrma_title
        , c.fst_name as first_name
        --, c.mid_name as middle_name
        , c.last_name as last_name
        --, ad.addr_name as Full_address
        , ad.addr as ad_line_1
        , ad.addr_line_2 as ad_line_2
        , ad.city as suburb
        , ad.state
        , ad.zipcode as post_code
        , letter_version

FROM  gms.s_contact c

INNER JOIN gms.s_contact_x cx
on cx.par_row_id=c.row_id

INNER JOIN gms.s_contact_fnx fn
on fn.par_row_id=c.row_id

inner join gms.s_addr_per as ad         --813620
on c.pr_per_addr_id = ad.row_id

inner join gms.s_org_ext as org             --3.2m
on org.pr_con_id = c.row_id

inner join final f
on f.account_id=org.row_id

WHERE 1=1
    
AND cx.attrib_46='Post'                                             --renewal preference
--(COALESCE(c.x_inv_email_1, 'N') = 'Y' or c.email_addr IS  NULL)     --non-email able
and c.cust_stat_cd = 'Active'      
and c.con_cd in ('Ordinary Member' , 'Affiliate Member')                
and NVL(c.x_nrma_title,'no title') != 'Estate Of The Late'              --deceased check
and NVL(fn.deceased_flg,'N') = 'N'                              
and c.csn is not null                                           
and case when trim(ad.premise_flg) = 'Y' or ad.addr_name is null then 'N' else 'Y' end = 'Y' --no return address
--and nvl(cx.attrib_35,'Yes') <> 'No' --post permission          
and (UPPER(trim(NVL(ad.addr,'NULL')))<>'NULL' or UPPER(trim(NVL(ad.addr_line_2,'NULL')))<>'NULL')       --valid address

  
