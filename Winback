blue_eligible = spark.sql("""
select distinct
         c.csn as member_number
        ,c.row_id as contact_id
    --    ,o.row_id as account_id
        ,c.cust_stat_cd as cust_stat
        ,c.con_cd as contact_type
	    ,c.x_nrma_household_flg as hh
    --	,nvl(o.pr_con_id,'N') = 'Y' as primary
    	,c.email_addr as email_address

    from gms.s_contact as c 
    
	--inner join gms.s_org_ext as o 
	--on c.pr_dept_ou_id = o.row_id

	inner join gms.s_asset as a 
	on a.owner_accnt_id = c.pr_dept_ou_id

	inner join gms.s_prod_int as p
       on a.prod_id = p.row_id
       
    inner join gms.s_contact_fnx as fn 
       on fn.par_row_id = c.row_id 
    
    where a.status_cd = 'Active'
    and p.type = 'Membership'
    and p.prod_cd = 'Promotion'
    and NVL(fn.deceased_flg,'N') = 'N'
    and c.csn is not null
""")
blue_eligible.createOrReplaceTempView("blue_eligible")
spark.sql('select distinct contact_id from blue_eligible').count()
----------------------------------------------------------------------------
----------------------------------------------------------------------------
cmo_members = spark.sql("""
select p.name as product,c.row_id as contact_id,c.csn as member_number,c.con_cd as member_type from gms.s_contact as c
    
    inner join gms.s_asset as a
        on a.owner_con_id = c.row_id
        
    inner join gms.s_prod_int as p
        on a.prod_id = p.row_id

where
    (p.name like 'Autoclub%')
    and a.status_cd = 'Active'
""")
cmo_members.createOrReplaceTempView("cmo_members")
spark.sql("""select * from cmo_members""").count()
---------------------------------------------------------------------
---------------------------------------------------------------------

lapsed = spark.sql("""
Select
         c.row_id as contact_id
        ,c.cust_stat_cd as cust_stat
        ,c.con_cd as con_type
        ,c.csn as member_number
        ,fn.deceased_flg as deceased
       -- ,case when o.pr_con_id = c.row_id then 'Y' else 'N' end as primary
        ,p.name as product
        ,p.sub_type_cd as product_type
        ,a.status_cd as asset_status
        ,x.attrib_36 as Email_Mktg
        ,case when c.email_addr is not null then 'Has email' end as email_addr
        ,c.x_inv_email_1
        ,a.end_dt as effective_to_date
        ,x.attrib_55 as loyaltycolor
        ,case when UPPER(x.attrib_55) in ('CYAN','GREEN','RED') then 1 
                when UPPER(x.attrib_55) in ('KHAKI','GREY','LILAC') then 3
                when UPPER(x.attrib_55) in ('YELLOW', 'BROWN', 'ORANGE', 'PURPLE') then 2 
                when UPPER(x.attrib_55)=NULL then 2 else 0 end segment

        
    from 
        gms.s_contact as c
    
        left join blue_eligible as b
        on c.row_id=b.contact_id
        
        left join cmo_members cmo
        on cmo.contact_id = c.row_id
        
        left join email_valid e
        on e.row_id = c.row_id

	    inner join gms.s_asset as a 
	    on a.owner_con_id = c.row_id
	    
	    inner join gms.s_asset_x as ax
	    on a.row_id = ax.par_row_id

	    inner join gms.s_prod_int as p
        on a.prod_id = p.row_id
        --and p.name != 'Membership'
        and p.prod_cd = 'Product'
        and p.sub_type_cd in ('RSA','Non-RSA')
        
        inner join gms.s_contact_fnx as fn
        on fn.par_row_id = c.row_id
        
        inner join gms.s_contact_x as x
        on x.par_row_id = c.row_id


    
    where (fn.deceased_flg = 'N' or fn.deceased_flg is null)
        and c.con_cd in ('Affiliate Member') 
        and b.contact_id is null
        and cmo.contact_id is null
        and e.row_id is null
        and ax.ATTRIB_04 = 'Cancel Lapsed'
""")
-------------------------------------------------------------------
-------------------------------------------------------------------
Winback_pool= spark.sql("""  

select    c.row_id ContactID
        , c.csn MemberNumber
        , c.cust_stat_cd as cust_stat
        , c.CON_CD as contact_type
        , x.attrib_55 as loyaltycolor
        , case when UPPER(x.attrib_55) in ('CYAN','GREEN','RED') then 1 
                when UPPER(x.attrib_55) in ('YELLOW', 'BROWN', 'ORANGE', 'PURPLE') then 2 
                when UPPER(x.attrib_55) in ('KHAKI','GREY','LILAC') then 3 else 0 end segment 


from gms.s_contact c

inner join gms.s_contact_fnx as fn
on fn.par_row_id = c.row_id
        
inner join gms.s_contact_x as x
on x.par_row_id = c.row_id

left join blue_eligible b --exclude all blue eligible
on b.email_address = c.email_addr


where b.contact_id is NULL
    and c.con_cd = 'Affiliate Member' --lapsed
    and c.cust_stat_cd = 'Active'  --Active Customer
    and NVL(fn.deceased_flg,'N') = 'N' --Non deceased
    and NVL(c.x_nrma_title,'no title') != 'Estate Of The Late' 
    and case when (trim(c.x_inv_email_1) = 'Y' or c.email_addr is null) then 'N' else 'Y' end = 'Y' --valid email address
    and nvl(x.attrib_36,'Yes') !='No' --email permission

""")
Winback_pool.createOrReplaceTempView("Winback_pool")
spark.sql('select distinct contactid from Winback_pool').count()
